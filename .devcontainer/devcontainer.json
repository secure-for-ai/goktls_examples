// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-dockerfile
{
	"name": "goktls_examples",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": ".",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	"dockerComposeFile": [
		"../docker-compose.vscode.yaml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "dev",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a volume mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",

	// Set *default* container specific settings.json values on container create.
	//"settings": {},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
        "golang.go",
        "quillaja.goasm",
        "maxmedia.go-prof",
        "ethan-reesor.vscode-go-test-adapter",
        "donjayamanne.python-extension-pack",
        "mhutchie.git-graph",
        "streetsidesoftware.code-spell-checker"
    ],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// "postCreateCommand": "sudo apt update && sudo apt install -y graphviz",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	//"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	//"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-from-docker": {
			"version": "latest",
			"moby": true
		}
	}
}
